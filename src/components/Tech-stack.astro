---
import type { TechStackItem } from "@types";
import Section from "./Section.astro";

interface Props {
  techStack: TechStackItem[];
}

const { techStack } = Astro.props;
---

<Section text="Tech Stack" href="tech-stack">
  <ul class="flex flex-wrap justify-center gap-4">
    {
      techStack?.length ? (
        techStack.map(({ name, icon, url }) => (
          <li
            class="bg-[#2f2d2d] border border-[#F5D0A9] rounded-lg p-2 flex items-center gap-2 shadow-md transition-shadow hover:shadow-[#F5D0A9]/50  opacity-0 translate-y-6 duration-700"
            data-scroll-animation
          >
            <a href={url} target="_blank" class="flex items-center gap-2">
              <img
                src={icon}
                alt={`${name} logo`}
                class="w-6 h-6 md:w-8 md:h-8 object-contain"
              />
              <span class="text-sm font-semibold text-[#F5D0A9]">{name}</span>
            </a>
          </li>
        ))
      ) : (
        <p class="text-gray-300 text-center">No tech stack data available.</p>
      )
    }
  </ul>
</Section>

<script>
  function setupScrollAnimations() {
    const animatedElements = document.querySelectorAll(
      "[data-scroll-animation]",
    );
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            const element = entry.target;
            if (element instanceof HTMLElement) {
              element.style.opacity = "1";
              element.style.transform = "translateY(0)";
            }
            observer.unobserve(entry.target);
          }
        });
      },
      {
        root: null,
        threshold: 0.1,
        rootMargin: "-50px",
      },
    );

    animatedElements.forEach((el) => observer.observe(el));
  }

  setupScrollAnimations();
  document.addEventListener("astro:page-load", setupScrollAnimations);
</script>
